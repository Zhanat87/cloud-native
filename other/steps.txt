cloud native getting started starts:

cd other && git clone https://github.com/lreimer/cloud-native-go

https://hub.docker.com/r/zhanat87/cloud-native/
https://github.com/Zhanat87/cloud-native

ll

docker build -t zhanat87/cloud-native:1.0.0 .
docker images
docker push zhanat87/cloud-native:1.0.0
docker rmi <id>

GOOS=linux GOARCH=amd64 go build && docker build -t zhanat87/cloud-native:1.1.0 .
docker push zhanat87/cloud-native:1.1.0

docker-compose up -d
docker-compose ps
docker logs cloudnative_microservice_1
http://localhost:9090/
http://localhost:8080/
docker-compose stop
docker-compose rm

CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build && \
docker build -t zhanat87/cloud-native:1.2.0 . && \
docker push zhanat87/cloud-native:1.2.0 && \
docker images | grep cloud-native

kubectl cluster-info
curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.20.0/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
minikube status
minikube version
https://github.com/kubernetes/minikube
minikube start
192.168.99.100
minikube stop
sudo service docker start

https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/
kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml

minikube dashboard
http://192.168.99.100:30000/#!/workload?namespace=default

kubectl get nodes
kubectl config get-contexts
kubectl config use-context giantswarm-56v2s - error
minikube docker-env
eval $(minikube docker-env)
kubectl cluster-info
kubectl create -f k8s-pod.yml
kubectl get pods
kubectl describe pod cloud-native
kubectl port-forward cloud-native 8080:8080
http://localhost:8080/
http://localhost:8080/api/books
kubectl get pods --show-labels
kubectl get pods -o wide -L env
kubectl label pod cloud-native hello=world
kubectl get pods -o wide -L hello
kubectl label pod cloud-native env=prod --overwrite

kubectl get ns
kubectl get pods --namespace kube-system
kubectl create -f k8s-namespace.yml
kubectl create -f k8s-pod.yml --namespace cloud-native
kubectl get pods
kubectl get pods --namespace cloud-native
kubectl delete -f k8s-namespace.yml
kubectl delete pod cloud-native

kubectl get pods,deployments,rs
kubectl create -f k8s-deployment.yml
after changes in k8s-deployment.yml:
kubectl apply -f k8s-deployment.yml
kubectl describe deployment cloud-native
kubectl create -f k8s-service.yml
kubectl get services
smotret port iz etogo service:
http://192.168.99.100:30450
kubectl get pods

in first terminal:
kubectl get pods -w
in second terminal:
kubectl delete -f k8s-deployment.yml
kubectl get pods,deployments,rs
kubectl create -f k8s-deployment.yml --record=true
kubectl scale deployment cloud-native --replicas=5
kubectl get pods
kubectl scale deployment cloud-native --replicas=3
kubectl get pods
kubectl rollout history deployment cloud-native
kubectl get services
kubectl set image deployment cloud-native cloud-native=zhanat87/cloud-native:1.1.0
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build && \
docker build -t zhanat87/cloud-native:1.3.0 . && \
docker push zhanat87/cloud-native:1.3.0 && \
docker images | grep cloud-native
kubectl set image deployment cloud-native cloud-native=zhanat87/cloud-native:1.3.0
otkatit predidushee izmenenie:
kubectl rollout undo deployment cloud-native

kubectl delete -f k8s-deployment.yml
minikube stop


cloud native advanced starts:
https://hub.docker.com/r/zhanat87/cloud-native-advanced/
docker build -t zhanat87/cloud-native-advanced:1.0.0 . && \
docker push zhanat87/cloud-native-advanced:1.0.0 && \
docker images | grep cloud-native-advanced
docker run -p 8080:8080 zhanat87/cloud-native-advanced:1.0.0
docker ps
docker stop <container_id>

docker-compose up -d
docker-compose ps
https://github.com/variadico/hellodocker
docker-compose stop && docker-compose build && docker-compose up -d
http://localhost

create k8s-deployment.yml and k8s-service.yml
minikube start && sudo service docker start
minikube ip
kubectl cluster-info
minikube dashboard
kubectl create -f kubernetes
kubectl get pods,deployments,rs,services,ingresses
kubectl describe deployment cloud-native-advanced
kubectl get pods
minikube service cloud-native-advanced
kubectl scale deployment cloud-native-advanced --replicas=8

https://github.com/cyrsis/GoSandBox/blob/master/AdvancedCloudNative/Frameworks/Gin-Web/kubernetes/k8s-ingress.yml

docker build -t zhanat87/cloud-native-advanced:1.1.0 . && \
docker push zhanat87/cloud-native-advanced:1.1.0 && \
docker images | grep cloud-native-advanced

cd Discovery/Consul/ && docker-compose up
http://localhost:8500/ui
http://localhost:8500/v1/catalog/services
http://localhost:8500/v1/agent/services
PUT http://localhost:8500/v1/agent/service/register
vse dannie v faile Discovery/Consul/discovery.postman_collection.json
http://localhost:8500/v1/health/service/gin-web

cd Configuration/Consul/ && docker-compose up
http://localhost:8500/ui/#/dc1/kv/

cd advanced/Discovery/Simple
go get github.com/hashicorp/consul/api
https://github.com/cyrsis/GoSandBox/tree/master/AdvancedCloudNative/Discovery/Simple
cd server && docker build -t simple-server:1.0.0 . && \
cd ../client && docker build -t simple-client:1.0.0 . && \
cd ../ && docker images
docker-compose up
docker ps - dlya nahozhdeniya id continerov, chtobi vivesti log oshibok esli est:
docker logs <container_id>
http://localhost:8500/ui
http://localhost:8081/info
check that consul not passing yet:
docker ps
fing simple-server container_id, than stop this container:
docker stop <container_id>
and look at consul
than start it again and check at consul again:
docker start <container_id>

cd other && git clone https://github.com/cyrsis/GoSandBox.git

cd advanced/Discovery/Kubernetes
eval $(minikube docker-env)
cd server && docker build -t simple-k8s-server:1.0.0 . && \
cd ../client && docker build -t simple-k8s-client:1.0.0 . && \
cd ../ && docker images
docker-compose up
http://localhost:9090/info
minikube start
kubectl apply -f .
kubectl get pods,deployments,services,configmap
minikube dashboard

cd advanced/Communication
minikube start && sudo service docker start && eval $(minikube docker-env)
cd Go-Micro
go get -u github.com/micro/micro && \
go get github.com/micro/protobuf/proto && \
go get -u github.com/micro/protobuf/protoc-gen-go && \
go get github.com/micro/go-plugins/wrapper/breaker/hystrix && \
go get github.com/afex/hystrix-go/hystrix
cd server && docker build -t go-micro-server:1.0.0 . && \
cd ../client && docker build -t go-micro-client:1.0.0 . && \
cd ../ && docker images && docker-compose up
http://localhost:8500/ui
http://localhost:9002/hystrix/monitor?stream=http://go-micro-client:8081

cd advanced/Communication/RabbitMQ
cd producer && docker build -t rabbitmq-producer:1.0.0 . && \
cd ../consumer && docker build -t rabbitmq-consumer:1.0.0 . && \
cd ../ && docker images && docker-compose up

cd advanced/Communication/Kafka
go get github.com/Shopify/sarama
cd producer && docker build -t kafka-producer:1.0.0 . && \
cd ../subscriber && docker build -t kafka-subscriber:1.0.0 . && \
cd ../ && docker images && docker-compose up



















































